@model MvcRecordStore.Models.ViewModels.RecordCreateVM

@{
    Layout = "../Admin/_AdminLayout.cshtml";
    ViewData["Title"] = "Edit";
}

<div class="row mt-4">
    <div class="col-md-8 mx-auto">
        <div class="card border rounded-0 border-2 shadow-sm">
            <div class="card-header bg-dark text-white">
                <h5>Edit Record</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="ID" />
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ArtistID" class="control-label">Artist</label>
                        <select asp-for="ArtistID" class="form-control">
                            @foreach(var item in ViewBag.Artists)
                            {
                                <option value="@item.ID">@item.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Type" class="control-label">Type</label>
                        <select asp-for="Type" class="form-control" asp-items="Html.GetEnumSelectList<RecordType>()"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="ReleaseDate" class="control-label"></label>
                        <input asp-for="ReleaseDate" class="form-control" />
                        <span asp-validation-for="ReleaseDate" class="text-danger"></span>
                    </div>
                    <div id="formatsContainer">
                        @for (int i = 0; i < Model.FormatPrices.Count; i++)
                        {
                            @await Component.InvokeAsync("FormatPriceVC", new { 
                                index = i,
                                formatPrice = Model.FormatPrices[i]
                                })
                        }
                    </div>
                    <button type="button" id="addFormatButton" class="btn btn-secondary">Add Format</button>
                    <div class="form-group">
                        <label asp-for="LabelID" class="control-label">Label</label>
                        <select asp-for="LabelID" class="form-control">
                            @foreach(var item in ViewBag.Labels)
                            {
                                <option value="@item.ID">@item.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Genres</label>
                        <div class="row">
                            @foreach (var item in ViewBag.Genres)
                            {
                                @if(Model.SelectedGenres.Contains(item.ID))
                                {
                                    <div class="col-md-3">
                                        <div class="form-check">
                                            <input type="checkbox" checked name="SelectedGenres" value="@item.ID" class="form-check-input" />
                                            <label class="form-check-label">@item.Name</label>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-3">
                                        <div class="form-check">
                                            <input type="checkbox" name="SelectedGenres" value="@item.ID" class="form-check-input" />
                                            <label>@item.Name</label>
                                        </div>
                                    </div>
                                }
                            }
                            <span asp-validation-for="SelectedGenres"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("addFormatButton").addEventListener("click", function () {
                var formatsContainer = document.getElementById("formatsContainer");
                var formatPriceGroups = formatsContainer.getElementsByClassName("format-price-group");
                var newIndex = formatPriceGroups.length;

                var newFormatPriceGroup = formatPriceGroups[0].cloneNode(true);
                newFormatPriceGroup.querySelectorAll("input").forEach(function(input) {
                    var name = input.getAttribute("name");
                    if (name) {
                        var newName = name.replace(/\[\d+\]/, "[" + newIndex + "]");
                        input.setAttribute("name", newName);
                        input.value = "";
                    }
                });

                formatsContainer.appendChild(newFormatPriceGroup);
            });
        });
    </script>
}